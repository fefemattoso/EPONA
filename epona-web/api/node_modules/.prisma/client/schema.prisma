generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id         Int         @id @default(autoincrement())
  nome       String
  email      String      @unique
  senha      String
  nascimento DateTime
  pontuacao  Int?        @default(0)
  criadoEm   DateTime?   @default(now())
  itenslista ItemLista[] @relation("escreve")
  lista      Listas[]    @relation("cria")
  agenda     Agenda[]    @relation("planeja")
  atividade  Atividade[] @relation("tem")
  notas      Notas[]     @relation("criaNotas") // Notas agora est√£o relacionadas diretamente com o Usuario
}

model Atividade {
  id        Int     @id @default(autoincrement())
  titulo    String
  descricao String?
  usuarioId Int
  concluido Boolean @default(false)
  usuario   Usuario @relation("tem", fields: [usuarioId], references: [id])
}

model Listas {
  id        Int         @id @default(autoincrement())
  titulo    String
  usuarioId Int
  usuario   Usuario     @relation("cria", fields: [usuarioId], references: [id])
  itens     ItemLista[] @relation("pertence")
}

model Notas {
  id        Int     @id @default(autoincrement())
  titulo    String
  descricao String
  usuarioId Int
  usuario   Usuario @relation("criaNotas", fields: [usuarioId], references: [id])
}

model ItemLista {
  id        Int     @id @default(autoincrement())
  descricao String
  usuarioId Int
  concluido Boolean @default(false)
  listaId   Int
  lista     Listas  @relation("pertence", fields: [listaId], references: [id])
  usuario   Usuario @relation("escreve", fields: [usuarioId], references: [id])
}

model Agenda {
  id        Int      @id @default(autoincrement())
  titulo    String
  descricao String?
  data      DateTime
  usuarioId Int
  usuario   Usuario  @relation("planeja", fields: [usuarioId], references: [id])
}
